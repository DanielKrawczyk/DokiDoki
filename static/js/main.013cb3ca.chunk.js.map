{"version":3,"sources":["Components/MainMenu/Components/Logo.tsx","States/PlayerName.ts","Assets/Sounds.ts","Components/MainMenu/Components/Menu.tsx","Handlers/CloseHandler.ts","Components/MainMenu/Components/MenuCharacters.tsx","Components/MainMenu/Components/SelectName.tsx","Components/MainMenu/Components/Warning.tsx","Components/MainMenu/Components/Background.tsx","Handlers/DocumentHandlers.ts","Components/MainMenu/MainMenu.tsx","Engine/Story/Writer.ts","Components/Game/Components/Storybar.tsx","Components/Game/Components/Button.tsx","Components/Warning.tsx","Engine/MainCharacter/MainCharacter.ts","Engine/Story/Story.ts","Components/Game/Components/Background.tsx","Engine/Character/Features/PositionList.ts","Engine/Character/Character.tsx","Components/Game/Components/Components/Person.tsx","Components/Game/Components/Characters.tsx","Handlers/SaveGameHandler.ts","Components/Game/Components/Debug.tsx","Components/Game/Game.tsx","AppSettings.ts","App.tsx","NoSupport.tsx","index.tsx"],"names":["Logo","className","id","src","alt","title","Name","localStorage","JSON","parse","getItem","PlayerNameState","atom","key","default","Hover","_Path","HoverSound","Audio","Play","play","Click","ClickSound","Menu","props","PlayerName","useRecoilValue","OnQuit","window","confirm","alert","location","replace","MenuButtonsHover","element","currentTarget","children","onMouseOver","el","onClick","document","getElementById","classList","add","OnNewGame","Path","OnHelp","Settings","AllowTestingArea","OnTest","MenuCharacters","SelectName","SetName","useSetRecoilState","type","autoComplete","value","length","setItem","stringify","SaveNameToLocal","Warning","Background","GetId","ElementId","GetQuery","Element","querySelector","MainMenu","useEffect","Main","setTimeout","remove","LoadBeforeMainContext","autoPlay","onEnded","item","currentTime","OnStart","Writer","Text","Index","Time","Content","IsDone","Write","TargetId","WritingScript","this","Target","innerHTML","Storybar","Person","NewText","FilteredText","push","i","CheckForDollar","Writing","ProceedWhenDone","OnNext","body","onkeyup","keyCode","onContextMenu","event","preventDefault","EStoryBar","contains","RightClickStorybar","Button","useState","ButtonState","SetButtonState","ButtonStates","onMouseOut","ButtonText","WarningStage","SetWarningStage","WarningText","Warn","btn","map","text","MainCharacter","MainCharacterName","CurrentStage","Choices","_MainCharacterName","_Choices","_CurrentStage","AddChoice","SetCurrentStage","RenameCharacter","Story","Data","Music","Characters","music","background","person","characters","Image","PositionList","Character","CharacterName","TempEffects","Position","Images","ResetPosition","forEach","position","CheckEffects","effect","ImplementEffect","head","CheckPosition","HeadPosition","BodyPosition","name","effects","images","LoadGame","SavesStorage","Debug","State","ProceedTo","OnBackToMenu","SaveGame","Player","console","log","Game","DataCount","SetDataCount","EStory","EBlackscreen","FadeInAndOutBlackscreen","temp","Next","loop","AppSettings","PublicPath","MusicOn","MusicVolumeLevel","DevelopmentMode","AllowAutoSave","AllowSmallScreens","App","GameState","SetGameState","StartNewGame","Stage","GoBackToMenu","Components","StoryData","AboutData","TestData","NoSupport","screen","width","ReactDOM","render","StrictMode"],"mappings":"m/pIAAe,SAASA,IACpB,OACI,qBAAKC,UAAU,OAAOC,GAAG,OAAzB,SACI,qBAAKC,IAAI,sCAAsCC,IAAI,oBAAoBC,MAAM,wBCDzF,IAAIC,EAAe,GAEf,wBAAyBC,eACzBD,EAAOE,KAAKC,MAASF,aAAaG,QAAS,yBAG/C,IAKeC,EALSC,YAAK,CACzBC,IAAK,8BACLC,QAASR,I,cCVAS,EAAb,uFAEI,WACI,OAAOA,EAAMC,UAHrB,KAAaD,EACeC,MAAgB,2BAD/BD,EAMeE,WAA+B,IAAIC,MAAOH,EAAMC,OAN/DD,EAQFI,KAAO,kBAAqBJ,EAAME,WAAWG,QAGjD,IAAMC,EAAb,uFAEI,WACI,OAAOA,EAAML,UAHrB,KAAaK,EACeL,MAAgB,4BAD/BK,EAMeC,WAA+B,IAAIJ,MAAOG,EAAML,OAN/DK,EAQFF,KAAO,kBAAqBE,EAAMC,WAAWF,Q,WCbzC,SAASG,EAAMC,GAE1B,IAAMC,EAAaC,YAAgBf,GAM/BgB,EAAS,WCZRC,OAAOC,QAAQ,qEAEhBD,OAAOE,MAAO,qEACdF,OAAOG,SAASC,QAAS,uBDYvBC,EAAmB,SAAEC,GAAF,OAAqCA,EAAQC,cAAcC,SAAS,GAAyBhB,QAEtH,OACI,sBAAKnB,UAAU,OAAf,UACI,qBAAKA,UAAU,kBAAkBC,GAAG,kBAApC,SACI,qBAAKC,IAAI,yCAAyCC,IAAI,OAE1D,qBAAKH,UAAU,YAAYC,GAAG,YAA9B,SACI,qBAAKC,IAAI,oCAAoCC,IAAI,OAErD,sBAAKH,UAAU,YAAf,UACI,oBACIoC,YAAc,SAACC,GAAD,OAAQL,EAAkBK,IACxCC,QAAU,WAEN,GADAlB,EAAMF,OACc,KAAfM,EAAoB,OAASe,SAASC,eAAgB,QAA0BC,UAAUC,IAAK,UAtB1FnB,EAAMoB,aAkBxB,qBASI,uBAAOzC,IAAMY,EAAM8B,UAEvB,oBACIR,YAAc,SAACC,GAAD,OAAQL,EAAkBK,IACxCC,QAAU,WACNlB,EAAMF,OA/BGS,OAAOE,MAAO,mBA4B/B,sBAQI,uBAAO3B,IAAMY,EAAM8B,UAEvB,oBACIR,YAAc,SAACC,GAAD,OAAQL,EAAkBK,IACxCC,QAAU,WACNlB,EAAMF,OAxCGS,OAAOE,MAAO,mBAqC/B,qBAQI,uBAAO3B,IAAMY,EAAM8B,UAEvB,oBACIR,YAAc,SAACC,GAAD,OAAQL,EAAkBK,IACxCC,QAAU,WACNlB,EAAMF,OAjDDK,EAAMsB,UA8CnB,iBAQI,uBAAO3C,IAAMY,EAAM8B,UAEvB,oBACIR,YAAc,SAACC,GAAD,OAAQL,EAAkBK,IACxCC,QAAU,WACNlB,EAAMF,OACNQ,KAJR,iBAQI,uBAAOxB,IAAMY,EAAM8B,UAGlBE,EAASC,iBACN,oBACIX,YAAc,SAACC,GAAD,OAAQL,EAAkBK,IACxCC,QAAU,WACNlB,EAAMF,OArETK,EAAMyB,UAkEX,iBAQI,uBAAO9C,IAAMY,EAAM8B,UATE,SEhFlC,SAASK,IACpB,OACI,sBAAKjD,UAAU,aAAaC,GAAG,aAA/B,UACI,qBAAKD,UAAU,SAAf,SACI,qBAAKE,IAAI,0CAA0CC,IAAI,aAAaC,MAAM,iBAE9E,qBAAKJ,UAAU,UAAf,SACI,qBAAKE,IAAI,0CAA0CC,IAAI,cAAcC,MAAM,kBAE/E,qBAAKJ,UAAU,SAAf,SACI,qBAAKE,IAAI,0CAA0CC,IAAI,aAAaC,MAAM,iBAE9E,qBAAKJ,UAAU,OAAf,SACI,qBAAKE,IAAI,0CAA0CC,IAAI,WAAWC,MAAM,kBCTzE,SAAS8C,EAAY3B,GAChC,IAAM4B,EAAUC,YAAmB1C,GAQnC,OACI,qBAAKV,UAAU,OAAOC,GAAG,OAAzB,SACI,sBAAKD,UAAU,aAAf,UACI,qBAAKE,IAAI,+BAA+BC,IAAI,KAC5C,sBAAKH,UAAU,mBAAf,UACI,iDAIA,uBAAOqD,KAAK,OAAOpD,GAAG,WAAWqD,aAAa,QAE9C,mBACItD,UAAU,KACVoC,YAAc,kBAAMtB,EAAMI,QAC1BoB,QAAU,WACNlB,EAAMF,OACN,IAAMb,EAAiBkC,SAASC,eAAgB,YAAmCe,MAC9ElD,EAAKmD,OAAS,GAvB3C,SAA0BnD,GACtB8C,EAAS9C,GACTC,aAAamD,QAAS,sBAAuBlD,KAAKmD,UAAWrD,IAC7DkB,EAAMoB,YAqBcgB,CAAiBtD,IAPzB,iBAYA,uBAAOH,IAAI,2BAA2BD,GAAG,qBCpC9C,SAAS2D,IACpB,OACI,qBAAK5D,UAAU,UAAUC,GAAG,UAA5B,SACI,uEAEI,uBAFJ,yCCHG,SAAS4D,IACpB,OACI,sBAAK7D,UAAU,aAAaC,GAAG,aAA/B,UACI,qBAAKD,UAAU,QAAQE,IAAI,uCAAuCC,IAAI,KACtE,qBAAKH,UAAU,QAAQE,IAAI,uCAAuCC,IAAI,KACtE,qBAAKH,UAAU,QAAQE,IAAI,uCAAuCC,IAAI,KACtE,qBAAKH,UAAU,QAAQE,IAAI,uCAAuCC,IAAI,KACtE,qBAAKH,UAAU,QAAQE,IAAI,uCAAuCC,IAAI,QCP3E,SAAS2D,EAAOC,GACnB,OAASxB,SAASC,eAAgBuB,GAG/B,SAASC,EAAUC,GAEtB,MADmB,MAAfA,EAAQ,KAAYA,EAAU,IAAMA,GAC/B1B,SAAS2B,cAAeD,GCItB,SAASE,EAAS5C,GAmC7B,OAJA6C,qBAAU,YA7BV,WACI,IAAMrE,EAAqB+D,EAAO,QAASrB,UACvCmB,EAAwBE,EAAO,WAAYrB,UAC3C4B,EAAqBP,EAAO,mBAAoBrB,UAEpD6B,YAAW,WACPvE,EAAK2C,IAAK,UAEV4B,YAAW,WACPvE,EAAKwE,OAAQ,UAEbD,YAAW,WACPV,EAAQlB,IAAK,YACd,KAEH4B,YAAW,WACPV,EAAQW,OAAQ,UAEhBD,YAAW,WACPD,EAAK3B,IAAK,YACX,OAEJ,OAEJ,OAEJ,KAIH8B,MAIA,sBAAKxE,UAAU,YAAYC,GAAG,YAA9B,UACI,uBAAOA,GAAG,iBAAiBC,IAAI,uBAAuBuE,UAAQ,EAACC,QAAU,SAAEC,GACvEA,EAAKzC,cAAc0C,YAAc,KACjCD,EAAKzC,cAAcf,UAGvB,cAAC,EAAD,IACA,cAAC,EAAD,IACA,sBAAKnB,UAAU,kBAAkBC,GAAG,kBAApC,UACI,cAAC4D,EAAD,IACA,cAACvC,EAAD,CACIqB,UAAY,kBAAMpB,EAAMsD,WACxBhC,OAAS,kBAAMtB,EAAMsB,UACrBG,OAAS,kBAAMzB,EAAMyB,YAEzB,cAACC,EAAD,IACA,cAACC,EAAD,CAAYP,UAAW,kBAAMpB,EAAMsD,mB,IC3D9BC,E,WAQjB,WAAaC,GAAuB,IAAD,gCAPnCC,MAAgB,EAOmB,KAN1BC,KAAe,GAMW,KALnCC,QAAkB,GAKiB,KAJnCC,QAAkB,EAIiB,KAFnCJ,UAEmC,OAInCK,MAAQ,SAAEC,GAAF,OAA8B,EAAKC,cAAexB,EAAOuB,KAH7DE,KAAKR,KAAOA,E,iDAKhB,SAAuBS,GAA6B,IAAD,OAE/CD,KAAKL,SAAWK,KAAKR,KAAMQ,KAAKP,OAEhCQ,EAAOC,UAAYF,KAAKL,QAExBK,KAAKP,QAEAO,KAAKP,MAAQO,KAAKR,KAAKvB,SAAW+B,KAAKJ,OAExCb,YAAW,WACP,EAAKgB,cAAeE,KACrBD,KAAKN,MAEAM,KAAKP,MAAQO,KAAKR,KAAKvB,QAAU+B,KAAKJ,OAE9CI,KAAKD,cAAeE,IAIpBD,KAAKJ,QAAS,EACdrB,EAAO,SAAUrB,UAAUC,IAAK,e,KChC7B,SAASgD,EAAUnE,GAAmB,IAEzCoE,EAAiBpE,EAAjBoE,OAAQZ,EAASxD,EAATwD,KACVvD,EAAqBC,YAAgBf,GACrCkF,EASN,WACI,IAAIC,EAAe,GAEH,KAAXF,GAAgBE,EAAaC,KAAM,KAExC,IAAK,IAAIC,EAAY,EAAGA,EAAIhB,EAAKvB,OAAQuC,IAEpB,MAAZhB,EAAKgB,GAAaF,EAAaC,KAAMtE,GACrCqE,EAAaC,KAAMf,EAAKgB,IAIjB,KAAXJ,GAAgBE,EAAaC,KAAM,KAExC,OAAOD,EAvBoBG,GACzBC,EAAkB,IAAInB,EAAQc,GAmCpC,SAASM,IACAD,EAAQd,OACT5D,EAAM4E,SAENF,EAAQd,QAAS,EAYzB,OATAf,qBAAU,WACNN,EAAO,SAAUrB,UAAU8B,OAAQ,UAErB,eAATQ,GAAkC,oBAATA,IA1C9BxC,SAAS6D,KAAKC,QAAU,SAACzF,GACA,KAAhBA,EAAI0F,SAAiBJ,KA4C9BD,EAAQb,MAAO,kBAIf,qBACIpF,UAAU,gBACVC,GAAG,WACHqC,QAAU,kBAAM4D,KAChBK,cAAgB,SAAEC,GAAF,OA/BxB,SAA6BvE,GACzBA,EAAQwE,iBACR,IAAMC,EAA0B5C,EAAO,YAAarB,UAE/CiE,EAAUC,SAAU,QACrBD,EAAUnC,OAAQ,QAElBmC,EAAUhE,IAAK,QAwBmBkE,CAAoBJ,IAJ1D,SAMI,sBAAKxG,UAAU,iBAAf,UACI,qBAAKE,IAAI,oCAAoCF,UAAU,QAAQG,IAAI,KAEpD,KAAXwF,EAAgB,GAAG,qBAAKzF,IAAI,oCAAoCF,UAAU,OAAOG,IAAI,KAEzF,qBAAKD,IAAI,gCAAgCF,UAAU,QAAQC,GAAG,QAAQE,IAAI,KAE1E,qBAAKH,UAAU,wBAAf,SACI,4BAEmB,MAAX2F,EAAiBnE,EAAamE,MAI1C,qBAAK3F,UAAU,sBAAsBC,GAAG,eAGxC,qBAAKD,UAAU,gCCnFhB,SAAS6G,EAAQtF,GAAmB,IAAD,EAENuF,mBAAU,GAFJ,mBAEtCC,EAFsC,KAEzBC,EAFyB,KAIxCC,EAAe,CACjB,qBAAK/G,IAAI,gDAAgDC,IAAI,KAC7D,qBAAKD,IAAI,iDAAiDC,IAAI,MAGlE,OACI,sBAAKH,UAAU,SAAf,UACI,qBAAKA,UAAU,aAAf,SAEQiH,EAAcF,KAGtB,qBACI/G,UAAU,cACVoC,YAAc,WACVtB,EAAMI,OACN8F,EAAgB,IAEpBE,WAAa,kBAAMF,EAAgB,IACnC1E,QAAU,WACNlB,EAAMF,OACNK,EAAM4E,UATd,SAaQ5E,EAAM4F,gB,YC1BX,SAASvD,EAASrC,GAAmB,IAAD,EACLuF,mBAAS,GADJ,mBACvCM,EADuC,KACzBC,EADyB,KAE3CC,EAAcC,EAAMH,GAMxB,OAJAhD,qBAAU,WACNN,EAAO,YAAarB,UAAU8B,OAAQ,WAItC,sBAAKvE,UAAU,QAAQC,GAAG,eAA1B,UACI,qBAAKC,IAAI,uCAAuCF,UAAU,SAASG,IAAI,KACvE,qBAAKD,IAAI,sCAAsCD,GAAG,OAAOD,UAAU,QAAQG,IAAI,KAG3EmH,EAAYE,IAAIC,KAAK,SAAE9C,GACnB,OACI,cAACkC,EAAD,CAAQM,WAAaxC,EAAK+C,KAAOvB,OAAS,kBAAM5E,EAAM4E,eAKlE,cAAC,EAAD,CACIR,OAAO,GACPZ,KAAOuC,EAAYI,KACnBvB,OAAS,WACiB,IAAjBiB,GACLC,EAAiBD,EAAe,S,IC7B/BO,E,WAiBjB,WAAaC,GAAqF,IAAD,OAAzDC,EAAyD,uDAAlC,EAAGC,EAA+B,uDAAL,GAAK,yBAfzFC,wBAeyF,OAVzFC,SAA2B,GAU8D,KALzFC,cAAwB,EAKiE,KAMjGC,UAAY,SAAE3E,GAAF,OAA8B,EAAKyE,SAASlC,KAAMvC,IANmC,KAQjG4E,gBAAkB,SAAE5E,GAAF,OAA6B,EAAK0E,cAAgB1E,GAR6B,KAUjG6E,gBAAkB,SAAE7E,GAAF,OAA6B,EAAKwE,mBAAqBxE,GATrEgC,KAAKwC,mBAAqBH,EAC1BrC,KAAK0C,cAAgBJ,EACrBtC,KAAKyC,SAAWF,E,mDAjBpB,WACI,OAAOvC,KAAKwC,qB,mBAIhB,WACI,OAAOxC,KAAKyC,W,wBAIhB,WACI,OAAOzC,KAAK0C,kB,KCbCI,EAOjB,WAAaC,GAAoB,yBANjBC,WAMgB,OALhB1E,gBAKgB,OAJhBkB,UAIgB,OAHhBY,YAGgB,OAFhB6C,gBAEgB,EAC5BjD,KAAKgD,MAAQD,EAAKG,MAClBlD,KAAK1B,WAAayE,EAAKI,WACvBnD,KAAKR,KAAOuD,EAAKZ,KACjBnC,KAAKI,OAAS2C,EAAKK,OACnBpD,KAAKiD,WAAaF,EAAKM,YChBhB,SAAS/E,EAAYtC,GAChC,OACI,qBAAKvB,UAAU,aAAf,SACI,qBAAKE,IAAG,gCAA2BqB,EAAMsH,MAAjC,QAA8C1I,IAAI,O,ICHjD2I,E,kCAAAA,EACVA,aAA8B,CACjC,aACA,kBACA,mBACA,WACA,YACA,kBACA,mBACA,oB,ICJaC,E,WAOjB,WAAaC,EAAuBC,EAA4BC,EAAkBC,GAAmB,IAAD,gCALpFH,mBAKoF,OAJpFC,iBAIoF,OAHpFC,cAGoF,OAFpFC,YAEoF,OAOpGlF,QAAU,WAAsB,OAAOH,EAAM,aAAD,OAAe,EAAKkF,gBAAkBvG,WAPkB,KAiDpG2G,cAAgB,kBAAYN,EAAaA,aAAaO,SAAS,SAAEC,GAAF,OAAwB,EAAKrF,UAAUM,OAAQ+E,OAjDV,KAmDpGC,aAAe,kBAAY,EAAKN,YAAYI,SAAS,SAAEG,GAAF,OAAsB,EAAKC,gBAAiBD,OAlD7FjE,KAAKyD,cAAgBA,EACrBzD,KAAK0D,YAAcA,EACnB1D,KAAK2D,SAAWA,EAChB3D,KAAK4D,OAASA,E,gDAKlB,WAAqB,IAETO,EAASnE,KAAK4D,OAAdO,KAER,OAAqB,IAAhBA,EAAKlG,OAEF,sBAAKxD,UAAU,OAAf,UACI,qBAAKG,IAAI,GAAGD,IAAG,0BAAqBqF,KAAKyD,cAA1B,YAA2CU,EAAK,GAAhD,QAA0D1J,UAAU,SACnF,qBAAKG,IAAI,GAAGD,IAAG,0BAAqBqF,KAAKyD,cAA1B,YAA2CU,EAAK,GAAhD,QAA0D1J,UAAU,WAKvF,qBAAKA,UAAU,OAAf,SACI,qBAAKG,IAAI,GAAGD,IAAG,0BAAqBqF,KAAKyD,cAA1B,YAA2CU,EAAK,GAAhD,QAA0D1J,UAAU,a,0BAMnG,WAAqB,IAEToG,EAASb,KAAK4D,OAAd/C,KAER,OAAqB,IAAhBA,EAAK5C,OAEF,sBAAKxD,UAAU,OAAf,UACI,qBAAKG,IAAI,GAAGH,UAAU,OAAOE,IAAG,0BAAqBqF,KAAKyD,cAA1B,YAA2C5C,EAAK,GAAhD,UAChC,qBAAKjG,IAAI,GAAGH,UAAU,QAAQE,IAAG,0BAAqBqF,KAAKyD,cAA1B,YAA2C5C,EAAK,GAAhD,aAKrC,qBAAKpG,UAAU,OAAf,SACI,qBAAKG,IAAI,GAAGH,UAAU,OAAOE,IAAG,0BAAqBqF,KAAKyD,cAA1B,YAA2C5C,EAA3C,c,6BAUhD,SAAiBoD,GAEb,OAAQA,GAEJ,IAAK,UACDjE,KAAKtB,UAAUvB,IAAK,WACpB,MAEJ,IAAK,WACD6C,KAAKtB,UAAUM,OAAO,WACtBgB,KAAKtB,UAAUM,OAAO,YAAa,cACnC,MAEJ,IAAK,YACDgB,KAAKtB,UAAUvB,IAAI,aACnB,MAEJ,IAAK,YACD6C,KAAKtB,UAAUM,OAAO,aACtB,MAEJ,IAAK,OACDgB,KAAKtB,UAAUM,OAAO,aACtBgB,KAAKtB,UAAUvB,IAAI,QACnB,MAEJ,IAAK,iBACD6C,KAAKtB,UAAUvB,IAAI,kBACnB,MAEJ,IAAK,YACD6C,KAAKtB,UAAUvB,IAAI,aACnB,MAEJ,IAAK,iBACD6C,KAAKtB,UAAUM,OAAO,gB,2BAQlC,WAEI,OAAQgB,KAAK2D,UACT,IAAK,SACD3D,KAAKtB,UAAUvB,IAAI,cACnB,MACJ,IAAK,cACD6C,KAAKtB,UAAUvB,IAAI,mBACnB,MACJ,IAAK,eACD6C,KAAKtB,UAAUvB,IAAI,oBACnB,MACJ,IAAK,OACD6C,KAAKtB,UAAUvB,IAAI,YACnB,MACJ,IAAK,QACD6C,KAAKtB,UAAUvB,IAAI,aACnB,MACJ,IAAK,cACD6C,KAAKtB,UAAUvB,IAAI,mBACnB,MACJ,IAAK,eACD6C,KAAKtB,UAAUvB,IAAI,oBACnB,MACJ,IAAK,qBACD6C,KAAKtB,UAAUvB,IAAI,0BAzBT,IA+BV0D,EAASb,KAAK4D,OAAd/C,KAEoB,YAAvBb,KAAKyD,gBACW,MAAZ5C,EAAK,IAA0B,OAAZA,EAAK,IACzBb,KAAKtB,UAAUvB,IAAK,yB,KC5IrB,SAASiD,EAAQpE,GAC5B,IAAMoE,EAAoBpE,EAAMoE,OAQhC,OANAvB,qBAAU,WACNuB,EAAOyD,gBACPzD,EAAOgE,gBACPhE,EAAO4D,kBAGoB,SAA1B5D,EAAOwD,OAAOO,KAAK,GAEhB,qBAAK1J,UAAU,YAAYC,GAAE,oBAAe0F,EAAOqD,eAAnD,SACI,qBAAKhJ,UAAU,OAAOE,IAAG,0BAAqByF,EAAOqD,cAA5B,YAA6CrD,EAAOwD,OAAO/C,KAAK,GAAhE,QAA0EjG,IAAI,OAK3G,sBAAKH,UAAU,YAAYC,GAAE,oBAAe0F,EAAOqD,eAAnD,UAEQrD,EAAOiE,eAGPjE,EAAOkE,kBCtBZ,SAASrB,EAAYjH,GAEhC,IAAMiH,EAA+BjH,EAAMiH,WAAWf,KAAK,SAAE9C,GAEzD,OAAO,IAAIoE,EAAWpE,EAAKmF,KAAMnF,EAAKoF,QAASpF,EAAK2E,SAAU3E,EAAKqF,WAIvE,OACI,qBAAKhK,UAAU,aAAf,SAEQwI,EAAWf,KAAK,SAAE9C,GACd,OACI,cAAC,EAAD,CAAiCgB,OAAShB,GAA7BA,EAAKqE,oBCLnC,SAASiB,IAEZ,IAAIC,EAAqC,GAMzC,MAJK,wBAAyB5J,eAC1B4J,EAAe3J,KAAKC,MAAOF,aAAaG,QAAS,yBAG9CyJ,EChBI,SAASC,EAAO5I,GAC3B,OACI,sBAAKvB,UAAU,QAAf,UACI,gDACqBuB,EAAM6I,SAE3B,uBAAO/G,KAAK,SAASpD,GAAG,gBACxB,wBAAQqC,QAAU,kBAAMf,EAAM8I,UAAavG,EAAO,eAAsCP,QAAxF,sBAGA,wBAAQjB,QAAU,kBAAMf,EAAM+I,gBAA9B,2BAGA,wBAAQhI,QAAU,kBDdvB,SAAmBqF,GAEtB,IAAIuC,EAAqCD,IAEzCC,EAAapE,KAAM6B,GAEnBrH,aAAamD,QAAS,sBAAuBlD,KAAKmD,UAAWwG,ICQ7BK,CAAUhJ,EAAMiJ,SAAxC,2BAGA,wBAAQlI,QAAU,WACdmI,QAAQC,IAAIT,MADhB,8BCPG,SAASU,EAAMpJ,GAAmB,IAAD,EAERuF,mBAAS,GAFD,mBAEpC8D,EAFoC,KAEzBC,EAFyB,KAGtCvC,EAAc,IAAID,EAAO9G,EAAM+G,KAAMsC,IACrCJ,EAAwB,IAAI7C,EAAelG,YAAgBf,IAgEjE,OA/DA8J,EAAOrC,gBAAgByC,GA0CvBxG,qBAAU,WAENE,YAAW,WACPN,EAAU,eAAgBvB,UAAU8B,OAAQ,UAE5CD,YAAW,WACP,IAAMoB,EAAW5B,EAAO,YACP,OAAb4B,GACAA,EAASjD,UAAU8B,OAAQ,UAChC,OAEJ,QAIY,eAAd+D,EAAKvD,KAvDV,WACI,IAAM+F,EAAuBhH,EAAO,SAAUrB,UAC1CsI,EAA6B/G,EAAU,eAAgBvB,UACvDiE,EAA2B5C,EAAO,YAAarB,UAEnDqI,EAAOpI,IAAK,QAEZ4B,YAAW,WAEPyG,EAAarI,IAAI,UACjBoI,EAAOpI,IAAI,YAEX4B,YAAW,WAEPuG,EAAcD,EAAY,GAC1BE,EAAOvG,OAAO,YAEdD,YAAW,WAEPA,YAAW,WACPyG,EAAaxG,OAAO,YACrB,KAEHD,YAAW,WACPoC,EAAUnC,OAAO,UAClB,OAEJ,OAEJ,OAEJ,KAyBHyG,GACsB,oBAAd1C,EAAKvD,MACbxD,EAAM+I,eAIN,sBAAKtK,UAAU,QAAQC,GAAG,QAA1B,UACI,cAAC,EAAD,CAAY4I,MAAQP,EAAKzE,aACzB,cAAC,EAAD,CAAY2E,WAAaF,EAAKE,aAC9B,cAAC,EAAD,CACI7C,OAAS2C,EAAK3C,OACdZ,KAAOuD,EAAKvD,KACZoB,OAAQ,WACJ,GAAKyE,IAAcrJ,EAAM+G,KAAK9E,OAAS,EAAI,OAAO7B,OAAOE,MAAO,2CAnChF,WACI,IAAIoJ,EAAOL,EACXK,IACAJ,EAAcI,GAiCFC,MAIW,KAAf5C,EAAKC,MAAe,GAAG,uBAAOrI,IAAG,yBAAoBoI,EAAKC,MAAzB,QAAsC9D,UAAQ,EAAC0G,MAAI,IAGnF5J,EAAM4I,MACH,cAACA,EAAD,CACIC,MAAQQ,EACRJ,OAASA,EACTH,UAAY,SAAE9G,GACLA,EAAQ,GAAKA,EAAQhC,EAAM+G,KAAK9E,OAAS,GAC9CqH,EAActH,IAElB+G,aAAe,kBAAM/I,EAAM+I,kBARpB,M,4BC5FVc,E,sCAEDC,WAA0BvI,EAASuI,W,KACnCC,QAAmBxI,EAASwI,Q,KAC5BC,iBAA2BzI,EAASyI,iB,KACpCC,gBAA2B1I,EAAS0I,gB,KACpCC,cAAyB3I,EAAS2I,c,KAClCC,kBAA6B5I,EAAS4I,kB,KACtC3I,iBAA4BD,EAASC,kBCA1C,SAAS4I,EAAKpK,GAEzB,IAAMuB,EAAwB,IAAIsI,EAFS,EAIPtE,mBAAS,GAJF,mBAInC8E,EAJmC,KAIxBC,EAJwB,KAKvCrK,EAAaC,YAAgBf,GAEjC,SAASoL,IAAyC,IAA3BC,EAA0B,uDAAV,EAEnC/H,EAAU,eAAgBvB,UAAUC,IAAK,UACzCoB,EAAO,aAAcrB,UAAUC,IAAK,YAEpC4B,YAAW,WACPuH,EAAcE,KACf,KAeP,SAASC,IAELhI,EAAU,eAAgBvB,UAAUC,IAAK,UAEzC4B,YAAW,WACPuH,EAAc,GACd7H,EAAU,eAAgBvB,UAAU8B,OAAQ,YAC7C,KAIP,IAAM0H,EAAa,CACf,cAAC,EAAD,CAAS9F,OAAS,kBAtBlBrC,EAAO,YAAarB,UAAUC,IAAK,QACnCoB,EAAO,QAASrB,UAAUC,IAAK,QAC/BsB,EAAU,UAAWvB,UAAUC,IAAK,aAEpC4B,YAAW,WACPuH,EAAc,KACf,QAiBH,cAAC1H,EAAD,CAAUU,QAAU,kBAAMiH,KAAiBjJ,OAAS,kBAAMiJ,EAAc,IAAM9I,OAAS,kBAAM8I,EAAc,MAC3G,cAACnB,EAAD,CAAMrC,KAAO4D,EAAY/B,MAAQrH,EAAS0I,gBAAkBlB,aAAe,kBAAM0B,OACjF,cAACrB,EAAD,CAAMrC,KAAO6D,EAAY7B,aAAe,kBAAM0B,KAAiB7B,MAAQrH,EAAS0I,kBAChF,cAACb,EAAD,CAAMrC,KAAO8D,EAAW9B,aAAe,kBAAM0B,KAAiB7B,MAAQrH,EAAS0I,mBAOnF,OAJApH,qBAAU,WACc,KAAf5C,GAAoBqK,EAAc,KACxC,CAAEtK,EAAOC,IAGR,sBAAKxB,UAAU,OAAf,UAEQiM,EAAYL,GAGhB,qBAAK5L,UAAU,mBCtEZ,SAASqM,IAEpB,OACI,qBAAKpM,GAAG,YAAR,SACI,qBAAKD,UAAU,UAAf,8E,UCIN8C,EAAwB,IAAIsI,EAE7BzJ,OAAO2K,OAAOC,MAAQ,OAASzJ,EAAS4I,kBAE3Cc,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACL,EAAD,MAEF9J,SAASC,eAAe,SAK1BgK,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACG,cAACf,EAAD,QAGLpJ,SAASC,eAAe,W","file":"static/js/main.013cb3ca.chunk.js","sourcesContent":["export default function Logo(): any {\r\n    return (\r\n        <div className=\"logo\" id=\"logo\">\r\n            <img src=\"./Assets/Images/MainMenu/splash.png\" alt=\"Team Salvato Logo\" title=\"Team Salvato Logo\" />\r\n        </div>\r\n    )\r\n}","import { atom } from \"recoil\";\r\n\r\nlet Name: string = \"\";\r\n\r\nif (\"dokidoki-playername\" in localStorage) {\r\n    Name = JSON.parse( ( localStorage.getItem( \"dokidoki-playername\" ) as string ) );\r\n}\r\n\r\nconst PlayerNameState = atom({\r\n    key: \"Player character name state\",\r\n    default: Name\r\n});\r\n\r\nexport default PlayerNameState;","export class Hover {\r\n    private static readonly _Path: string = \"./Assets/Audio/hover.ogg\";\r\n    static get Path(): string {\r\n        return Hover._Path;\r\n    }\r\n\r\n    private static readonly HoverSound: HTMLAudioElement = new Audio( Hover._Path );\r\n\r\n    static Play = (): Promise<void> => Hover.HoverSound.play();\r\n}\r\n\r\nexport class Click {\r\n    private static readonly _Path: string = \"./Assets/Audio/select.ogg\";\r\n    static get Path(): string {\r\n        return Click._Path;\r\n    }\r\n\r\n    private static readonly ClickSound: HTMLAudioElement = new Audio( Click._Path );\r\n\r\n    static Play = (): Promise<void> => Click.ClickSound.play();\r\n}","import { useRecoilValue } from \"recoil\";\r\nimport PlayerNameState from \"../../../States/PlayerName\";\r\nimport { Click, Hover } from \"../../../Assets/Sounds\";\r\nimport { CloseWindow } from \"../../../Handlers/CloseHandler\";\r\nimport Settings from \"../../../appsettings.json\";\r\n\r\nexport default function Menu( props: any ): any {\r\n\r\n    const PlayerName = useRecoilValue( PlayerNameState );\r\n\r\n    const OnNewGame = (): void => props.OnNewGame(),\r\n        OnLoadGame = (): void => window.alert( \"In development\" ),\r\n        OnSettings = (): void => window.alert( \"In development\" ),\r\n        OnHelp = (): void => props.OnHelp(),\r\n        OnQuit = (): void => CloseWindow(),\r\n        OnTest = (): void => props.OnTest();\r\n\r\n    const MenuButtonsHover = ( element: any ): Promise<void> => ( element.currentTarget.children[0] as HTMLAudioElement ).play();\r\n\r\n    return (\r\n        <div className=\"menu\">\r\n            <div className=\"menu-background\" id=\"menu-background\">\r\n                <img src=\"./Assets/Images/MainMenu/main_menu.png\" alt=\"\" />\r\n            </div>\r\n            <div className=\"menu-logo\" id=\"menu-logo\">\r\n                <img src=\"./Assets/Images/MainMenu/logo.png\" alt=\"\" />\r\n            </div>\r\n            <div className=\"menu-list\">\r\n                <p \r\n                    onMouseOver={ (el) => MenuButtonsHover( el ) } \r\n                    onClick={ () => {\r\n                        Click.Play();\r\n                        if ( PlayerName === \"\" ) return ( document.getElementById( \"name\" ) as HTMLElement ).classList.add( 'active' );\r\n                        OnNewGame();\r\n                    }\r\n                }>\r\n                    New Game\r\n                    <audio src={ Hover.Path }></audio>\r\n                </p>\r\n                <p \r\n                    onMouseOver={ (el) => MenuButtonsHover( el ) }\r\n                    onClick={ () => {\r\n                        Click.Play();\r\n                        OnLoadGame();\r\n                    }\r\n                }>\r\n                    Load Game\r\n                    <audio src={ Hover.Path }></audio>\r\n                </p>\r\n                <p \r\n                    onMouseOver={ (el) => MenuButtonsHover( el ) }\r\n                    onClick={ () => {\r\n                        Click.Play();\r\n                        OnSettings();\r\n                    }\r\n                }>\r\n                    Settings\r\n                    <audio src={ Hover.Path }></audio>\r\n                </p>\r\n                <p \r\n                    onMouseOver={ (el) => MenuButtonsHover( el ) }\r\n                    onClick={ () => {\r\n                        Click.Play();\r\n                        OnHelp();\r\n                    }\r\n                }>\r\n                    Help\r\n                    <audio src={ Hover.Path }></audio>\r\n                </p>\r\n                <p \r\n                    onMouseOver={ (el) => MenuButtonsHover( el ) } \r\n                    onClick={ () => {\r\n                        Click.Play();\r\n                        OnQuit();\r\n                    }\r\n                }>\r\n                    Quit\r\n                    <audio src={ Hover.Path }></audio>\r\n                </p>\r\n                {\r\n                    !Settings.AllowTestingArea ? \"\":                \r\n                        <p \r\n                            onMouseOver={ (el) => MenuButtonsHover( el ) } \r\n                            onClick={ () => {\r\n                                Click.Play();\r\n                                OnTest();\r\n                            }\r\n                        }>\r\n                            TEST\r\n                            <audio src={ Hover.Path }></audio>\r\n                        </p>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}","export function CloseWindow(): void {\r\n\r\n    if ( window.confirm(\" Do you reaaaally want to quit the game? Yuri will miss you... \") ) {\r\n        \r\n        window.alert( \"Don't forget to send support and tons of love to Team Salvato! <3\" );\r\n        window.location.replace( \"https://ddlc.moe/\" );\r\n\r\n    }\r\n        \r\n}","export default function MenuCharacters(): any {\r\n    return (\r\n        <div className=\"characters\" id=\"characters\">\r\n            <div className=\"monika\">\r\n                <img src=\"./Assets/Images/MainMenu/menu_art_m.png\" alt=\"Monika art\" title=\"Monika art\" />\r\n            </div>\r\n            <div className=\"natsuki\">\r\n                <img src=\"./Assets/Images/MainMenu/menu_art_n.png\" alt=\"Natsuki art\" title=\"Natsuki art\" />\r\n            </div>\r\n            <div className=\"sayori\">\r\n                <img src=\"./Assets/Images/MainMenu/menu_art_s.png\" alt=\"Sayori art\" title=\"Sayori art\" />\r\n            </div>\r\n            <div className=\"yuri\">\r\n                <img src=\"./Assets/Images/MainMenu/menu_art_y.png\" alt=\"Yuri art\" title=\"Yuri art\" />\r\n            </div>\r\n        </div>\r\n    )\r\n}","import { useSetRecoilState } from \"recoil\";\r\nimport { Click, Hover } from \"../../../Assets/Sounds\";\r\nimport PlayerNameState from \"../../../States/PlayerName\";\r\n\r\nexport default function SelectName( props: any ): any {\r\n    const SetName = useSetRecoilState( PlayerNameState );\r\n\r\n    function SaveNameToLocal( Name: string ): void {\r\n        SetName( Name );\r\n        localStorage.setItem( \"dokidoki-playername\", JSON.stringify( Name ) );\r\n        props.OnNewGame();\r\n    }\r\n\r\n    return (\r\n        <div className=\"name\" id=\"name\">\r\n            <div className=\"name-frame\">\r\n                <img src=\"./Assets/Images/UI/frame.png\" alt=\"\" />\r\n                <div className=\"name-frame_input\">\r\n                    <p>\r\n                        Write your name:\r\n                    </p>\r\n\r\n                    <input type=\"text\" id=\"new-name\" autoComplete=\"off\" />\r\n\r\n                    <p \r\n                        className=\"ok\" \r\n                        onMouseOver={ () => Hover.Play() } \r\n                        onClick={ () => {\r\n                            Click.Play();\r\n                            const Name: string = ( document.getElementById( \"new-name\" ) as HTMLInputElement ).value;\r\n                            if ( Name.length < 3 ) return;\r\n                            SaveNameToLocal( Name );\r\n                        }}>\r\n                            Ok.\r\n                    </p>\r\n\r\n                    <audio src=\"./Assets/Audio/hover.ogg\" id=\"ok-hover\"></audio>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","export default function Warning(): any {\r\n    return (\r\n        <div className=\"warning\" id=\"warning\">\r\n            <p>\r\n                This game is not suitable for children\r\n                <br />\r\n                or those who are easly disturbed.\r\n            </p>\r\n        </div>\r\n    )\r\n}","export default function Background(): any {\r\n    return (\r\n        <div className=\"background\" id=\"background\">\r\n            <img className=\"img_1\" src=\"./Assets/Images/MainMenu/menu_bg.png\" alt=\"\" />\r\n            <img className=\"img_2\" src=\"./Assets/Images/MainMenu/menu_bg.png\" alt=\"\" />\r\n            <img className=\"img_3\" src=\"./Assets/Images/MainMenu/menu_bg.png\" alt=\"\" />\r\n            <img className=\"img_4\" src=\"./Assets/Images/MainMenu/menu_bg.png\" alt=\"\" />\r\n            <img className=\"img_5\" src=\"./Assets/Images/MainMenu/menu_bg.png\" alt=\"\" />\r\n        </div>\r\n    )\r\n\r\n}","export function GetId( ElementId: string ): HTMLElement {\r\n    return ( document.getElementById( ElementId ) as HTMLElement );\r\n}\r\n\r\nexport function GetQuery( Element: string ): HTMLElement {\r\n    if (Element[0] !== \".\") Element = \".\" + Element;\r\n    return ( document.querySelector( Element ) as HTMLElement );\r\n}\r\n","import { useEffect } from \"react\";\r\n\r\nimport Logo from \"./Components/Logo\";\r\nimport Menu from \"./Components/Menu\";\r\nimport MenuCharacters from \"./Components/MenuCharacters\";\r\nimport SelectName from \"./Components/SelectName\";\r\nimport Warning from \"./Components/Warning\";\r\nimport Background from \"./Components/Background\";\r\nimport { GetId } from \"../../Handlers/DocumentHandlers\";\r\n\r\nexport default function MainMenu(props: any) {\r\n\r\n    function LoadBeforeMainContext() {\r\n        const Logo: DOMTokenList = GetId( \"logo\" ).classList,\r\n            Warning: DOMTokenList = GetId( \"warning\" ).classList,\r\n            Main: DOMTokenList = GetId( \"main-menu_final\" ).classList;\r\n        \r\n        setTimeout(() => {\r\n            Logo.add( \"active\" );\r\n\r\n            setTimeout(() => {\r\n                Logo.remove( \"active\" );\r\n\r\n                setTimeout(() => {\r\n                    Warning.add( \"active\" );\r\n                }, 500);\r\n\r\n                setTimeout(() => {\r\n                    Warning.remove( \"active\" );\r\n\r\n                    setTimeout(() => {\r\n                        Main.add( \"active\" );\r\n                    }, 500);\r\n\r\n                }, 3000);\r\n\r\n            }, 3000);\r\n\r\n        }, 500);\r\n    }\r\n\r\n    useEffect(() => {\r\n        LoadBeforeMainContext();\r\n    });\r\n\r\n    return (\r\n        <div className=\"main-menu\" id=\"main-menu\">\r\n            <audio id=\"mainmenu-audio\" src=\"./Assets/Audio/1.ogg\" autoPlay onEnded={ ( item ) => {\r\n                item.currentTarget.currentTime = 22.1;\r\n                item.currentTarget.play();\r\n                \r\n            }}></audio>\r\n            <Logo />\r\n            <Warning />\r\n            <div className=\"main-menu_final\" id=\"main-menu_final\">\r\n                <Background />\r\n                <Menu \r\n                    OnNewGame={ () => props.OnStart() } \r\n                    OnHelp={ () => props.OnHelp() } \r\n                    OnTest={ () => props.OnTest() } \r\n                />\r\n                <MenuCharacters />\r\n                <SelectName OnNewGame={() => props.OnStart()} />\r\n            </div>\r\n        </div>\r\n    )\r\n}","import { GetId } from \"../../Handlers/DocumentHandlers\";\r\nimport IWriter from \"./Model/IWriter\";\r\n\r\nexport default class Writer implements IWriter {\r\n    Index: number = 0;\r\n    readonly Time: number = 30;\r\n    Content: string = \"\";\r\n    IsDone: boolean = false;\r\n\r\n    Text: Array<string>;\r\n\r\n    constructor( Text: Array<string> ) {\r\n        this.Text = Text;\r\n    }\r\n\r\n    Write = ( TargetId: string ): void => this.WritingScript( GetId( TargetId ) );\r\n\r\n    private WritingScript( Target: HTMLElement ): void {\r\n\r\n        this.Content += this.Text[ this.Index ];\r\n\r\n        Target.innerHTML = this.Content;\r\n\r\n        this.Index++;\r\n\r\n        if ( this.Index < this.Text.length && !this.IsDone ) {\r\n            \r\n            setTimeout(() => {\r\n                this.WritingScript( Target );\r\n            }, this.Time);\r\n\r\n        } else if ( this.Index < this.Text.length && this.IsDone ) {\r\n\r\n            this.WritingScript( Target );\r\n\r\n        } else {\r\n\r\n            this.IsDone = true;\r\n            GetId( \"arrow\" ).classList.add( \"active\" );\r\n\r\n        }\r\n    }\r\n}","import { useEffect } from \"react\";\r\nimport { useRecoilValue } from \"recoil\";\r\nimport Writer from \"../../../Engine/Story/Writer\";\r\nimport { GetId } from \"../../../Handlers/DocumentHandlers\";\r\nimport PlayerNameState from \"../../../States/PlayerName\";\r\n\r\nexport default function Storybar( props: any ): any {\r\n\r\n    const { Person, Text } = props;\r\n    const PlayerName: string = useRecoilValue( PlayerNameState );\r\n    const NewText: Array<string> = CheckForDollar();\r\n    const Writing: Writer = new Writer( NewText );\r\n    \r\n    function SpaceToProceed(): void {\r\n        document.body.onkeyup = (key: KeyboardEvent) => {\r\n            if ( key.keyCode === 32 ) ProceedWhenDone();\r\n        }\r\n    }\r\n\r\n    function CheckForDollar(): Array<string> {\r\n        let FilteredText = [];\r\n\r\n        if ( Person !== \"\" ) FilteredText.push( '\"' );\r\n\r\n        for (let i: number = 0; i < Text.length; i++ ) {\r\n\r\n            if ( Text[i] === \"$\" ) FilteredText.push( PlayerName );\r\n            else FilteredText.push( Text[i] );\r\n\r\n        }\r\n\r\n        if ( Person !== \"\" ) FilteredText.push( '\"' );\r\n        \r\n        return FilteredText;\r\n    }\r\n\r\n    function RightClickStorybar( element: any ): void {\r\n        element.preventDefault();\r\n        const EStoryBar: DOMTokenList = GetId( \"storybar\" ).classList;\r\n\r\n        if ( EStoryBar.contains( \"hide\" ) ) \r\n            EStoryBar.remove( \"hide\" );\r\n        else \r\n            EStoryBar.add( \"hide\" );\r\n    }\r\n\r\n    function ProceedWhenDone(): void {\r\n        if ( Writing.IsDone ) \r\n            props.OnNext();\r\n        else \r\n            Writing.IsDone = true;\r\n    }\r\n\r\n    useEffect(() => {\r\n        GetId( \"arrow\" ).classList.remove( \"active\" );\r\n        \r\n        if ( Text === \"fade-black\" || Text === \"location-reload\" ) return;\r\n        \r\n        SpaceToProceed();\r\n        Writing.Write( \"write-text\" );\r\n    })\r\n\r\n    return (\r\n        <div \r\n            className=\"storybar hide\" \r\n            id=\"storybar\"\r\n            onClick={ () => ProceedWhenDone() }\r\n            onContextMenu={ ( event: any ) => RightClickStorybar( event ) }\r\n        >\r\n            <div className=\"storybar-frame\">\r\n                <img src=\"./Assets/Images/Story/textbox.png\" className=\"frame\" alt=\"\" />\r\n                {\r\n                    Person === \"\" ? \"\":<img src=\"./Assets/Images/Story/namebox.png\" className=\"name\" alt=\"\" />\r\n                }\r\n                <img src=\"./Assets/Images/Story/ctc.png\" className=\"arrow\" id=\"arrow\" alt=\"\" />\r\n\r\n                <div className=\"storybar-frame_person\">\r\n                    <p>\r\n                        {\r\n                            Person === \"$\" ? PlayerName : Person\r\n                        }\r\n                    </p>\r\n                </div>\r\n                <div className=\"storybar-frame_text\" id=\"write-text\">\r\n\r\n                </div>\r\n                <div className=\"storybar-frame_options\">\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import { useState } from \"react\";\r\nimport { Click, Hover } from \"../../../Assets/Sounds\";\r\n\r\nexport default function Button( props: any ): any {\r\n    \r\n    const [ ButtonState, SetButtonState ] = useState( 0 );\r\n\r\n    const ButtonStates = [\r\n        <img src=\"./Assets/Images/UI/choice_idle_background.png\" alt=\"\" />,\r\n        <img src=\"./Assets/Images/UI/choice_hover_background.png\" alt=\"\" />\r\n    ]\r\n\r\n    return (\r\n        <div className=\"button\">\r\n            <div className=\"button-btn\">\r\n                {\r\n                    ButtonStates[ ButtonState ]\r\n                }\r\n            </div>\r\n            <div \r\n                className=\"button-text\"\r\n                onMouseOver={ () => {\r\n                    Hover.Play();\r\n                    SetButtonState( 1 );\r\n                }}\r\n                onMouseOut={ () => SetButtonState( 0 ) }\r\n                onClick={ () => {\r\n                    Click.Play();\r\n                    props.OnNext();\r\n                }}\r\n            >\r\n                {\r\n                    props.ButtonText\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}","import { useState, useEffect } from \"react\";\r\nimport Storybar from \"./Game/Components/Storybar\";\r\nimport Button from \"./Game/Components/Button\";\r\nimport { GetId } from \"../Handlers/DocumentHandlers\";\r\nimport Warn from \"../Data/warning.json\";\r\n\r\nexport default function Warning( props: any ): any {\r\n    const [ WarningStage, SetWarningStage ] = useState(0),\r\n        WarningText = Warn[ WarningStage ];\r\n\r\n    useEffect(() => {\r\n        GetId( \"storybar\" ).classList.remove( \"hide\" );\r\n    });\r\n\r\n    return (\r\n        <div className=\"story\" id=\"main-warning\">\r\n            <img src=\"./Assets/Images/Warning/warning2.png\" className=\"second\" alt=\"\" />\r\n            <img src=\"./Assets/Images/Warning/warning.png\" id=\"warn\" className=\"first\" alt=\"\" />\r\n\r\n            {\r\n                WarningText.btn.map( ( item: any ): any => {\r\n                    return (\r\n                        <Button ButtonText={ item.text } OnNext={ () => props.OnNext() } />\r\n                    )\r\n                })\r\n            }\r\n\r\n            <Storybar \r\n                Person=\"\" \r\n                Text={ WarningText.text } \r\n                OnNext={ () => {\r\n                    if ( WarningStage === 2 ) return;\r\n                    SetWarningStage( WarningStage + 1 );\r\n                }}\r\n            />\r\n\r\n        </div>\r\n    )\r\n}","import IMainCharacter from './Model/IMainCharacter';\r\nimport IChoice from './Model/IChoice';\r\n\r\nexport default class MainCharacter implements IMainCharacter {\r\n\r\n    private _MainCharacterName: string;\r\n    get MainCharacterName(): string {\r\n        return this._MainCharacterName;\r\n    }\r\n\r\n    private _Choices: Array<IChoice> = [];\r\n    get Choices(): Array<IChoice> {\r\n        return this._Choices;\r\n    }\r\n\r\n    private _CurrentStage: number = 0;\r\n    get CurrentStage(): number {\r\n        return this._CurrentStage;\r\n    }\r\n\r\n    constructor( MainCharacterName: string, CurrentStage: number = 0, Choices: Array<IChoice> = [] ) {\r\n        this._MainCharacterName = MainCharacterName;\r\n        this._CurrentStage = CurrentStage;\r\n        this._Choices = Choices;\r\n    }\r\n\r\n    AddChoice = ( value: IChoice ): number => this._Choices.push( value );\r\n\r\n    SetCurrentStage = ( value: number ): number => this._CurrentStage = value;\r\n\r\n    RenameCharacter = ( value: string ): string => this._MainCharacterName = value;\r\n}","import IStoryData from \"../../Data/Model/IStoryData\";\r\nimport Character from \"../Character/Character\";\r\nimport IStory from \"./Model/IStory\";\r\n\r\nexport default class Story implements IStory {\r\n    public readonly Music: string;\r\n    public readonly Background: string;\r\n    public readonly Text: string;\r\n    public readonly Person: string;\r\n    public readonly Characters: Array<Character>;\r\n\r\n    constructor( Data: IStoryData ) {\r\n        this.Music = Data.music;\r\n        this.Background = Data.background;\r\n        this.Text = Data.text;\r\n        this.Person = Data.person;\r\n        this.Characters = Data.characters;\r\n    }\r\n}","export default function Background( props: any ): any {\r\n    return (\r\n        <div className=\"background\">\r\n            <img src={`./Assets/Images/Story/${props.Image}.png`} alt=\"\" />\r\n        </div>\r\n    )\r\n}","export default class PositionList {\r\n    static PositionList: Array<string> = [ \r\n        'pos-center', \r\n        'pos-center-left', \r\n        'pos-center-right', \r\n        'pos-left', \r\n        'pos-right', \r\n        'pos-left-center', \r\n        'pos-right-center', \r\n        'natsuki-head-fix'\r\n    ];\r\n}","import ICharacter from \"./Model/ICharacter\";\r\nimport IImages from './Model/IImages';\r\nimport { GetId } from \"../../Handlers/DocumentHandlers\";\r\nimport PositionList from \"./Features/PositionList\";\r\n\r\nexport default class Character implements ICharacter {\r\n\r\n    public readonly CharacterName: string;\r\n    public readonly TempEffects: Array<string>;\r\n    public readonly Position: string;\r\n    public readonly Images: IImages;\r\n\r\n    constructor( CharacterName: string, TempEffects: Array<string>, Position: string, Images: IImages ) {\r\n        this.CharacterName = CharacterName;\r\n        this.TempEffects = TempEffects;\r\n        this.Position = Position;\r\n        this.Images = Images;\r\n    }\r\n\r\n    Element = (): DOMTokenList => { return GetId( `character-${this.CharacterName}` ).classList };\r\n\r\n    HeadPosition(): any {\r\n\r\n        const { head } = this.Images;\r\n        \r\n        if ( head.length === 2 ) {\r\n            return (\r\n                <div className=\"head\">\r\n                    <img alt=\"\" src={`./Assets/Images/${this.CharacterName}/${head[0]}.png`} className=\"head\" />\r\n                    <img alt=\"\" src={`./Assets/Images/${this.CharacterName}/${head[1]}.png`} className=\"add\" />\r\n                </div>\r\n            )\r\n        } else {\r\n            return (\r\n                <div className=\"head\">\r\n                    <img alt=\"\" src={`./Assets/Images/${this.CharacterName}/${head[0]}.png`} className=\"main\" />\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    BodyPosition(): any {\r\n\r\n        const { body } = this.Images;\r\n\r\n        if ( body.length === 2 ) {\r\n            return (\r\n                <div className=\"body\">\r\n                    <img alt=\"\" className=\"left\" src={`./Assets/Images/${this.CharacterName}/${body[0]}.png`} />\r\n                    <img alt=\"\" className=\"right\" src={`./Assets/Images/${this.CharacterName}/${body[1]}.png`} />\r\n                </div>\r\n            )\r\n        } else {\r\n            return (\r\n                <div className=\"body\">\r\n                    <img alt=\"\" className=\"main\" src={`./Assets/Images/${this.CharacterName}/${body}.png`} />\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    ResetPosition = (): void => PositionList.PositionList.forEach( ( position: string ) => this.Element().remove( position ) );\r\n\r\n    CheckEffects = (): void => this.TempEffects.forEach( ( effect: string ) => this.ImplementEffect( effect ) );\r\n\r\n    ImplementEffect( effect: string ): void {\r\n        \r\n        switch( effect ) {\r\n\r\n            case 'fade-in':\r\n                this.Element().add( 'fade-in' );\r\n                break;\r\n\r\n            case 'fade-out':\r\n                this.Element().remove('fade-in');\r\n                this.Element().remove('fade-left', 'fade-right');\r\n                break;\r\n\r\n            case 'push-down':\r\n                this.Element().add('push-down');\r\n                break;\r\n\r\n            case 'push-back':\r\n                this.Element().remove('push-down');\r\n                break;\r\n\r\n            case 'jump':\r\n                this.Element().remove('push-down');\r\n                this.Element().add('jump');\r\n                break;\r\n\r\n            case 'fade-from-left':\r\n                this.Element().add('fade-from-left')\r\n                break;\r\n\r\n            case 'fade-left':\r\n                this.Element().add('fade-left');\r\n                break;\r\n\r\n            case 'fade-left-away':\r\n                this.Element().remove('fade-left');\r\n                break;\r\n\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    CheckPosition(): void {\r\n\r\n        switch( this.Position ) {\r\n            case 'center':\r\n                this.Element().add('pos-center');\r\n                break;\r\n            case 'center-left':\r\n                this.Element().add('pos-center-left');\r\n                break;\r\n            case 'center-right':\r\n                this.Element().add('pos-center-right');\r\n                break;\r\n            case 'left':\r\n                this.Element().add('pos-left');\r\n                break;\r\n            case 'right':\r\n                this.Element().add('pos-right');\r\n                break;\r\n            case 'left-center':\r\n                this.Element().add('pos-left-center');\r\n                break;\r\n            case 'right-center':\r\n                this.Element().add('pos-right-center');\r\n                break;\r\n            case 'behind-left-center':\r\n                this.Element().add('pos-behind-left-center');\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        const { body } = this.Images;\r\n\r\n        if ( this.CharacterName === \"Natsuki\" )\r\n            if ( body[0] === \"3\" || body[0] === \"3b\" )\r\n                this.Element().add( \"natsuki-head-fix\" );\r\n    }\r\n}","import { useEffect } from \"react\";\r\nimport Character from \"../../../../Engine/Character/Character\";\r\n\r\nexport default function Person( props: any ): any {\r\n    const Person: Character = props.Person;\r\n\r\n    useEffect(() => {\r\n        Person.ResetPosition();\r\n        Person.CheckPosition();\r\n        Person.CheckEffects();\r\n    })\r\n\r\n    if ( Person.Images.head[0] === \"none\" ) {\r\n        return (\r\n            <div className=\"character\" id={`character-${Person.CharacterName}`}>\r\n                <img className=\"main\" src={`./Assets/Images/${Person.CharacterName}/${Person.Images.body[0]}.png`} alt=\"\"/>\r\n            </div>\r\n        )\r\n    } else {\r\n        return (\r\n            <div className=\"character\" id={`character-${Person.CharacterName}`}>\r\n                {\r\n                    Person.HeadPosition()\r\n                }\r\n                {\r\n                    Person.BodyPosition()\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}","import Character from \"../../../Engine/Character/Character\"\r\nimport Person from \"./Components/Person\";\r\n\r\nexport default function Characters( props: any ): any {\r\n\r\n    const Characters: Array<Character> = props.Characters.map( ( item: any ) => {\r\n\r\n        return new Character( item.name, item.effects, item.position, item.images );\r\n        \r\n    })\r\n\r\n    return (\r\n        <div className=\"characters\">\r\n            {\r\n                Characters.map( ( item: Character ) => {\r\n                    return (\r\n                        <Person key={item.CharacterName} Person={ item } />\r\n                    )\r\n                } )\r\n            }\r\n        </div>\r\n    )\r\n}","import MainCharacter from \"../Engine/MainCharacter/MainCharacter\";\r\n\r\nexport function SaveGame( MainCharacter: MainCharacter ): void {\r\n    // Under development\r\n    let SavesStorage: Array<MainCharacter> = LoadGame();\r\n    \r\n    SavesStorage.push( MainCharacter );\r\n\r\n    localStorage.setItem( \"dokidoki-savedgames\", JSON.stringify( SavesStorage ) );\r\n}\r\n\r\nexport function LoadGame(): Array<MainCharacter> {\r\n    // Under development\r\n    let SavesStorage: Array<MainCharacter> = [];\r\n\r\n    if ( \"dokidoki-savedgames\" in localStorage ) {\r\n        SavesStorage = JSON.parse( localStorage.getItem( \"dokidoki-savedgames\" ) as string );\r\n    }\r\n\r\n    return SavesStorage;\r\n}","import { GetId } from \"../../../Handlers/DocumentHandlers\";\r\nimport { SaveGame, LoadGame } from \"../../../Handlers/SaveGameHandler\";\r\n\r\nexport default function Debug( props: any ): any {\r\n    return (\r\n        <div className=\"debug\">\r\n            <p>\r\n                Current state: { props.State }\r\n            </p>\r\n            <input type=\"number\" id=\"debug-input\" />\r\n            <button onClick={ () => props.ProceedTo( ( GetId( \"debug-input\" ) as HTMLInputElement ).value ) }>\r\n                Proceed.\r\n            </button>\r\n            <button onClick={ () => props.OnBackToMenu() }>\r\n                Back to menu.\r\n            </button>\r\n            <button onClick={ () => SaveGame( props.Player ) } >\r\n                TEST SaveGame\r\n            </button>\r\n            <button onClick={ () => {\r\n                console.log(LoadGame());\r\n            }}>\r\n                TEST LoadGame\r\n            </button>\r\n        </div>\r\n    )\r\n}","import { useState, useEffect } from \"react\";\r\nimport MainCharacter from \"../../Engine/MainCharacter/MainCharacter\";\r\nimport Story from \"../../Engine/Story/Story\";\r\nimport { GetId, GetQuery } from \"../../Handlers/DocumentHandlers\";\r\nimport Background from \"./Components/Background\";\r\nimport Characters from \"./Components/Characters\";\r\nimport Debug from \"./Components/Debug\";\r\nimport Storybar from \"./Components/Storybar\";\r\n\r\nimport { useRecoilValue } from \"recoil\";\r\nimport PlayerNameState from \"../../States/PlayerName\";\r\n\r\nexport default function Game( props: any ): any {\r\n\r\n    const [ DataCount, SetDataCount ] = useState(0);\r\n    const Data: Story = new Story( props.Data[ DataCount ] );\r\n    const Player: MainCharacter = new MainCharacter( useRecoilValue( PlayerNameState ) );\r\n    Player.SetCurrentStage(DataCount);\r\n\r\n    function FadeInAndOutBlackscreen(): void {\r\n        const EStory: DOMTokenList = GetId( \"story\" ).classList,\r\n            EBlackscreen: DOMTokenList = GetQuery( \"blackscreen\" ).classList,\r\n            EStoryBar: DOMTokenList =  GetId( \"storybar\" ).classList;\r\n        \r\n        EStory.add( \"hide\" );\r\n\r\n        setTimeout(() => {\r\n\r\n            EBlackscreen.add('active');\r\n            EStory.add('fade-out');\r\n\r\n            setTimeout(() => {\r\n\r\n                SetDataCount( DataCount + 1 );\r\n                EStory.remove(\"fade-out\");\r\n\r\n                setTimeout(() => {\r\n\r\n                    setTimeout(() => {\r\n                        EBlackscreen.remove('active');\r\n                    }, 500);\r\n\r\n                    setTimeout(() => {\r\n                        EStoryBar.remove('hide');\r\n                    }, 1000);\r\n\r\n                }, 1000);\r\n\r\n            }, 500);\r\n\r\n        }, 300);\r\n    }\r\n\r\n    function Next(): void {\r\n        let temp = DataCount;\r\n        temp++;\r\n        SetDataCount( temp );\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        setTimeout(() => {\r\n            GetQuery( \"blackscreen\" ).classList.remove( \"active\" );\r\n\r\n            setTimeout(() => {\r\n                const Storybar = GetId( \"storybar\" );\r\n                if (Storybar !== null)\r\n                    Storybar.classList.remove( \"hide\" );\r\n            }, 1000);\r\n\r\n        }, 1000);\r\n\r\n    })\r\n\r\n    if ( Data.Text === \"fade-black\" ) {\r\n        FadeInAndOutBlackscreen();\r\n    } else if ( Data.Text === \"location-reload\" ) {\r\n        props.OnBackToMenu();\r\n    }\r\n\r\n    return (\r\n        <div className=\"story\" id=\"story\">\r\n            <Background Image={ Data.Background } />\r\n            <Characters Characters={ Data.Characters } />\r\n            <Storybar\r\n                Person={ Data.Person }\r\n                Text={ Data.Text }\r\n                OnNext={() => {\r\n                    if ( DataCount === props.Data.length - 1 ) return window.alert( \"Rest of the story is under development\" );\r\n                    Next();\r\n                }}\r\n            />\r\n            {\r\n                Data.Music === \"\" ? \"\":<audio src={`./Assets/Audio/${Data.Music}.ogg`} autoPlay loop></audio>\r\n            }\r\n            {\r\n                !props.Debug ? \"\":\r\n                    <Debug \r\n                        State={ DataCount }\r\n                        Player={ Player }\r\n                        ProceedTo={ ( value: number ) => {\r\n                            if ( value < 0 || value > props.Data.length - 1 ) return;\r\n                            SetDataCount( value );\r\n                        }}\r\n                        OnBackToMenu={ () => props.OnBackToMenu() }\r\n                    />\r\n            }\r\n        </div>\r\n    )\r\n}","import Settings from \"./appsettings.json\";\r\nimport IAppSettings from \"./Model/Settings/IAppSettings\";\r\nimport IPublicPath from \"./Model/Settings/IPublicPath\";\r\n\r\nexport default class AppSettings implements IAppSettings {\r\n\r\n    public readonly PublicPath: IPublicPath = Settings.PublicPath;\r\n    public readonly MusicOn: boolean = Settings.MusicOn;\r\n    public readonly MusicVolumeLevel: number = Settings.MusicVolumeLevel;\r\n    public readonly DevelopmentMode: boolean = Settings.DevelopmentMode; // should be false for build\r\n    public readonly AllowAutoSave: boolean = Settings.AllowAutoSave;\r\n    public readonly AllowSmallScreens: boolean = Settings.AllowSmallScreens;\r\n    public readonly AllowTestingArea: boolean = Settings.AllowTestingArea; // should be always false, unless for testing new animations\r\n\r\n}","import { useState, useEffect } from \"react\";\r\nimport { useRecoilValue } from \"recoil\";\r\nimport MainMenu from \"./Components/MainMenu/MainMenu\";\r\nimport Warning from \"./Components/Warning\";\r\nimport Game from \"./Components/Game/Game\";\r\nimport PlayerNameState from './States/PlayerName';\r\nimport { GetId, GetQuery } from \"./Handlers/DocumentHandlers\";\r\nimport StoryData from \"./Data/story.json\";\r\nimport AboutData from \"./Data/about.json\";\r\nimport TestData from \"./Data/test.json\";\r\nimport AppSettings from \"./AppSettings\";\r\n\r\nexport default function App( props: any ): any {\r\n\r\n    const Settings: AppSettings = new AppSettings();\r\n\r\n    const [ GameState, SetGameState ] = useState(1),\r\n        PlayerName = useRecoilValue( PlayerNameState );\r\n\r\n    function StartNewGame( Stage: number = 2 ): void {\r\n        \r\n        GetQuery( \"blackscreen\" ).classList.add( \"active\" );\r\n        GetId( \"main-menu\" ).classList.add( \"fade-out\" );\r\n\r\n        setTimeout(() => {\r\n            SetGameState( Stage );\r\n        }, 3000);\r\n    }\r\n\r\n    function FadeAfterWarning(): void {\r\n\r\n        GetId( \"storybar\" ).classList.add( \"hide\" );\r\n        GetId( \"warn\" ).classList.add( \"hide\" );\r\n        GetQuery( \"button\" ).classList.add( \"hide\" );\r\n\r\n        setTimeout(() => {\r\n            SetGameState( 1 );\r\n        }, 3000);\r\n        \r\n    }\r\n\r\n    function GoBackToMenu() {\r\n\r\n        GetQuery( \"blackscreen\" ).classList.add( \"active\" );\r\n\r\n        setTimeout(() => {\r\n            SetGameState( 1 );\r\n            GetQuery( \"blackscreen\" ).classList.remove( \"active\" );\r\n        }, 500);\r\n\r\n    }\r\n\r\n    const Components = [\r\n        <Warning OnNext={ () => FadeAfterWarning() } />,\r\n        <MainMenu OnStart={ () => StartNewGame() } OnHelp={ () => StartNewGame( 3 ) } OnTest={ () => StartNewGame( 4 ) } />,\r\n        <Game Data={ StoryData } Debug={ Settings.DevelopmentMode } OnBackToMenu={ () => GoBackToMenu() } />,\r\n        <Game Data={ AboutData } OnBackToMenu={ () => GoBackToMenu() } Debug={ Settings.DevelopmentMode } />,\r\n        <Game Data={ TestData } OnBackToMenu={ () => GoBackToMenu() } Debug={ Settings.DevelopmentMode } />\r\n    ]\r\n\r\n    useEffect(() => {\r\n        if ( PlayerName === \"\" ) SetGameState( 0 );\r\n    }, [ props, PlayerName ]);\r\n\r\n    return (\r\n        <div className=\"game\">\r\n            {\r\n                Components[ GameState ]\r\n            }\r\n\r\n            <div className=\"blackscreen\"></div>\r\n        </div>\r\n    )\r\n}","export default function NoSupport(): any {\r\n\r\n    return (\r\n        <div id=\"noSupport\">\r\n            <div className=\"message\">\r\n                This game does not support screen resolution less than 1024px!\r\n            </div>\r\n        </div>\r\n    )\r\n    \r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { RecoilRoot } from \"recoil\";\nimport App from './App';\nimport NoSupport from './NoSupport';\nimport \"./Styles/main.css\";\nimport AppSettings from \"./AppSettings\";\n\nconst Settings: AppSettings = new AppSettings();\n\nif ( window.screen.width < 1024 && !Settings.AllowSmallScreens ) {\n\n  ReactDOM.render(\n    <React.StrictMode>\n      <NoSupport />\n    </React.StrictMode>,\n    document.getElementById('root')\n  )\n\n} else {\n\n  ReactDOM.render(\n    <React.StrictMode>\n      <RecoilRoot>\n         <App />\n      </RecoilRoot>\n    </React.StrictMode>,\n    document.getElementById('root')\n  )\n}"],"sourceRoot":""}